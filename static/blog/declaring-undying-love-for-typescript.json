{"title":"\"declare\"ing my undying <img class=\"emoji\" draggable=\"false\" alt=\"❤\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/2764.svg\"/> love for TypeScript","description":"TypeScript is cool. Super cool. It's made us Web Dev's life super easy. Read me being a fanboy about it.","date":"1 Feb, 2021","cover_image":"media/declaring-my-undying-love-for-typescript-sun-love.jpg","body":"<p><img src=\"\" alt=\"\" class=\"feature-image\" style=\"display: none;\"></p><div class=\"picture-container\">\n  <figure style=\"width: 100%;padding-top: 66.66666666666666%;background-color: rgb(94, 70, 71)\">\n    <picture>\n      <source type=\"image/webp\" media=\"(min-width: 501px)\" data-srcset=\"media/declaring-my-undying-love-for-typescript-sun-love/large.webp\">\n      <source type=\"image/webp\" media=\"(max-width: 500px)\" data-srcset=\"media/declaring-my-undying-love-for-typescript-sun-love/small.webp\">\n      <source type=\"image/jpg\" media=\"(min-width: 501px)\" data-srcset=\"media/declaring-my-undying-love-for-typescript-sun-love/large.jpg\">\n      <source type=\"image/jpg\" media=\"(max-width: 500px)\" data-srcset=\"media/declaring-my-undying-love-for-typescript-sun-love/small.jpg\">\n      <img alt=\"Placeholder\" data-src=\"media/declaring-my-undying-love-for-typescript-sun-love/large.jpg\" class=\"lazyload blog-img\">\n    </picture>\n  </figure>\n  </div><p></p>\n<p>Alrighty! So, a fair warning before you jump on to the rest of the article: You probably won't learn any TypeScript related thing in this article. You may or you may not, I can't really say.</p>\n<p>What I can say is that you are gonna enjoy the hell out of this article. Me being a huge fanboy about TypeScript might just make your day.</p>\n<h1 id=\"Disclaimer\"><a class=\"heading-link\" href=\"blog/declaring-undying-love-for-typescript#Disclaimer\">#</a>Disclaimer</h1>\n<p>This isn't an extensive article about TypeScript or a Getting Started with TypeScript. This is just me fanboying about it and writing about the features I truly truly love of it.</p>\n<p>I come from a JavaScript and PHP background, so I don't have any statically typed language experience from before like C, Java, or C++. Some things that I might find great or magical about TypeScript, might be super normal or even a bit irritating if you're coming from one of these classic typed languages. This article is just a huge opinion. Opinions differ. So I implore you to just ignore that part and move on.</p>\n<h1 id=\"What-is-TypeScript\"><a class=\"heading-link\" href=\"blog/declaring-undying-love-for-typescript#What-is-TypeScript\">#</a>What is TypeScript?</h1>\n<p>In case you aren't familiar with TypeScript, it simply adds <mark>static type checking</mark> to your code, and that's what makes all the difference in the world.</p>\n<p>Official Definition:</p>\n<blockquote>\n<p>TypeScript is a superset developed and maintained by Microsoft. It is a strict syntactical superset of JavaScript and adds optional static typing to the language. TypeScript is designed for the development of large applications and transcompiles to JavaScript.</p>\n</blockquote>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">sum</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> b</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#submit</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addEventListener</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">click</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">val1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#input1</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">value</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">val2</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#input2</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">value</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #82AAFF\">sum</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">val1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">val2</span><span style=\"color: #F07178\">))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>Here we have a <code>sum</code> function declared, which will take two variables and return their sum. Then we have 2 inputs where you enter numbers. Then there's a submit button, which <code>onclick</code>, gets values of these 2 inputs and pass the input values to our <code>sum</code> functions, and <code>console.log</code> that value.</p>\n<p>So let's consider this <img class=\"emoji\" draggable=\"false\" alt=\"👇\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/1f447.svg\"></p>\n<p><img src=\"\" alt=\"\" class=\"feature-image\" style=\"display: none;\"></p><div class=\"picture-container\">\n  <div class=\"gif-vid-container\">\n    <video autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\">\n      <source src=\"/media/declaring-my-undying-love-for-typescript-code-sample-1/vidgif.mp4\" type=\"video/mp4\">\n      Your browser doesn't support HTML5 video playback. <a href=\"/media/declaring-my-undying-love-for-typescript-code-sample-1.gif\" target=\"_blank\" rel=\"noopener\">See the gif here</a>\n    </video>\n  </div>\n  </div><p></p>\n<p>So when inputs are 2 and 8, their sum is 28. When values are 89, and 1, we get 891. Weird huh?</p>\n<p>So here's what's happening. Instead of actually summing those numbers, javascript is actually concatenating those 2 numbers as if they are strings</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">2</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">8</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">28</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>Well, this happens because <code>input.value</code> always returns a string, no matter if it is input <code>type=\"number\"</code>.</p>\n<p>It's easy to fix it. We just have to put a <code>+</code> sign in our values:</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> val1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#input1</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">value</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>This <code>+</code> will convert the incoming value from the input to number, if it can, otherwise it will turn it into <code>NaN</code>. Luckily in out case, it will convert those values to <code>2</code> and <code>8</code> as numbers, respectively, and we'll get the correct answer, <code>10</code></p>\n<p>This saved us in the end, but what if it was much more complex codebase, and a dev forgot to fix it, and shipped it to production? Ooh, whatever would happened, it would make headlines in HackerNews and Twitter <img class=\"emoji\" draggable=\"false\" alt=\"😂\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/1f602.svg\">.</p>\n<p>This where TypeScript comes in handy. Consider the above code's equivalent in TypeScript:</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">function</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #82AAFF\">sum</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">number</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> b</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">number</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span></span>\n\n<span class=\"line\"><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#submit</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">addEventListener</span><span style=\"color: #A6ACCD\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">click</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">val1</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> (</span><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#input1</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">as</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">HTMLInputElement</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">value</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #C792EA\">const</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">val2</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #F07178\"> (</span><span style=\"color: #A6ACCD\">document</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">querySelector</span><span style=\"color: #F07178\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">#input2</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">as</span><span style=\"color: #F07178\"> </span><span style=\"color: #FFCB6B\">HTMLInputElement</span><span style=\"color: #F07178\">)</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">value</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #A6ACCD\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #82AAFF\">sum</span><span style=\"color: #F07178\">(</span><span style=\"color: #A6ACCD\">val1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #F07178\"> </span><span style=\"color: #A6ACCD\">val2</span><span style=\"color: #F07178\">))</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\">)</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>We added the type <code>number</code> to out parameters in <code>sum</code> function, used <code>as</code> keyword to say that the element selected is actually an <code>input</code> element. But our code editor shows an error here.</p>\n<p><img src=\"\" alt=\"\" class=\"feature-image\" style=\"display: none;\"></p><div class=\"picture-container\">\n  <div class=\"gif-vid-container\">\n    <video autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\">\n      <source src=\"/media/declaring-my-undying-love-for-typescript-code-sample-2/vidgif.mp4\" type=\"video/mp4\">\n      Your browser doesn't support HTML5 video playback. <a href=\"/media/declaring-my-undying-love-for-typescript-code-sample-2.gif\" target=\"_blank\" rel=\"noopener\">See the gif here</a>\n    </video>\n  </div>\n  </div><p></p>\n<p>See, Typescript is giving us an error that we can't put a <code>string</code> where a <code>number</code> was expected. It took the guessing game out of the equation completely, and saved us a lot of time later when the we would be looking in the whole codebase for the issue.</p>\n<h1 id=\"Only-specific-values-allowed\"><a class=\"heading-link\" href=\"blog/declaring-undying-love-for-typescript#Only-specific-values-allowed\">#</a>Only specific values allowed</h1>\n<p>You can limit the values a variable can be, using <mark>String Literal Types</mark>:</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> x</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">hi</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">hola</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">namaste</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>You try to put any other value in <code>x</code>, TypeScript will throw an error, and just won't compile your code.</p>\n<p>This feature helps a load, especially when I'm building error handling logic in React forms. I can simply make a map of all kinds of error codes and their messages, and limit it using TypeScript</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">type</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">TLoginError</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">user-not-found</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">wrong-password</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">network-request-failed</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">too-many-requests</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> loginErrorMessages</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span><span style=\"color: #A6ACCD\"> [</span><span style=\"color: #FFCB6B\">error</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">in</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">TLoginError</span><span style=\"color: #A6ACCD\">]</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">string</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">}</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">{</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">network-request-failed</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">Network request failed. Try to log in again.</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">user-not-found</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">Email not found in our database</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">wrong-password</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">Email and Password do not match</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #F07178\">too-many-requests</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">Too many login attempts. Try again in a minute</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">};</span></span></code></pre>\n<p><code>loginErrorMessages</code> won't take a property other than those specified in the type <code>TLoginError</code>. I can't stress enough how important that feature was when I was building an app.</p>\n<p>You can specifies numbers only too</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">type</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">FontWeights</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">200</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">300</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">400</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">600</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">700</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>Not to mention their use in limiting Arrays to accept only a small set of values.</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #A6ACCD\"> searchFilters </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> (</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">email</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">phone</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">designation</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\">)[] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> []</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>I actually used this snippet in a search feature I built for a Dashboard app.</p>\n<h2 id=\"Template-Literal-Types\"><a class=\"heading-link\" href=\"blog/declaring-undying-love-for-typescript#Template-Literal-Types\">#</a>Template Literal Types <img class=\"emoji\" draggable=\"false\" alt=\"💪\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/1f4aa.svg\"></h2>\n<p>Think of typings for Tailwind color palette.</p>\n<p>Let's limit ourselves to just 5 main colors, and 4 shades for the next example.</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">type</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">ColorPalette</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Blue</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">blue-100</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">blue-300</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">blue-500</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">blue-700</span><span style=\"color: #89DDFF\">'</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Green</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">green-100</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">green-300</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">green-500</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">green-700</span><span style=\"color: #89DDFF\">'</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Yellow</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">yellow-100</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">yellow-300</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">yellow-500</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">yellow-700</span><span style=\"color: #89DDFF\">'</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Red</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">red-100</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">red-300</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">red-500</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">red-700</span><span style=\"color: #89DDFF\">'</span></span>\n\n<span class=\"line\"><span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">// Cyan</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">cyan-100</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">cyan-300</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">cyan-500</span><span style=\"color: #89DDFF\">'</span></span>\n<span class=\"line\"><span style=\"color: #A6ACCD\">  </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">cyan-700</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>OMG!! We already had to declare <code>20</code> different color shade types here. And this is with a limited palette. Tailwind's actual palette has <code>22</code> colors, and <code>10</code> color shades. That's a whopping <mark>220</mark> string literals. We can't define all 220 of those can we?</p>\n<p>But we can use this nifty new feature called <code>Template Literal Types</code>. This feature shipped in TypeScript <code>4.1.0</code>, and was a total game changer when it dropped. It allowed us to apply dynamic behavior in your literal types.</p>\n<p>See <img class=\"emoji\" draggable=\"false\" alt=\"👇\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/1f447.svg\"></p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span class=\"line\"><span style=\"color: #C792EA\">type</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Color</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">blue</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">green</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">yellow</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">red</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">cyan</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">type</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">Shade</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">300</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">500</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">|</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #F78C6C\">700</span><span style=\"color: #89DDFF\">;</span></span>\n\n<span class=\"line\"><span style=\"color: #C792EA\">type</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #FFCB6B\">ColorPalette</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A6ACCD\"> </span><span style=\"color: #89DDFF\">`${</span><span style=\"color: #A6ACCD\">Color</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">-</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">Shade</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #89DDFF\">;</span></span></code></pre>\n<p>Now <code>ColorPalette</code> contains all the combinations that can come from crossing all these values from these 2 types. See for yourself <img class=\"emoji\" draggable=\"false\" alt=\"👇\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/1f447.svg\"></p>\n<p><img src=\"\" alt=\"\" class=\"feature-image\" style=\"display: none;\"></p><div class=\"picture-container\">\n  <div class=\"gif-vid-container\">\n    <video autoplay=\"\" loop=\"\" muted=\"\" playsinline=\"\">\n      <source src=\"/media/declaring-my-undying-love-for-typescript-template-literal-type/vidgif.mp4\" type=\"video/mp4\">\n      Your browser doesn't support HTML5 video playback. <a href=\"/media/declaring-my-undying-love-for-typescript-template-literal-type.gif\" target=\"_blank\" rel=\"noopener\">See the gif here</a>\n    </video>\n  </div>\n  </div><p></p>\n<p>This here is pure <img class=\"emoji\" draggable=\"false\" alt=\"🦄\" src=\"https://twemoji.maxcdn.com/v/13.0.1/svg/1f984.svg\"></p>\n<h1 id=\"Tuples-FTW!\"><a class=\"heading-link\" href=\"blog/declaring-undying-love-for-typescript#Tuples-FTW!\">#</a>Tuples FTW!</h1>\n<h1 id=\"It-is-futuristic\"><a class=\"heading-link\" href=\"blog/declaring-undying-love-for-typescript#It-is-futuristic\">#</a>It is futuristic</h1>\n","id":"declaring-undying-love-for-typescript","reading_time":6.575}